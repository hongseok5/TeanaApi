input {
    jdbc {
            # path of the jdbc driver
            #jdbc_driver_library => "/app/mysql-connector-java-8.0.17.jar"
            jdbc_driver_library => "/app/openQuerySE/logstash-6.5.4/lib_extend/mariadb-java-client-2.3.0.jar"

            # The name of the driver class 
            #jdbc_driver_class => "com.mysql.jdbc.Driver"
            jdbc_driver_class => "org.mariadb.jdbc.Driver"

            # Mysql jdbc connection string to company database
            #jdbc_connection_string => "jdbc:mysql://10.253.42.184:3306/ssgtv?serverTimezone=UTC"
            jdbc_connection_string => "jdbc:mariadb://10.253.42.121:3306/ssgtv?serverTimezone=UTC"
        
            # user credentials to connect to the DB
            jdbc_user => "ssgtv"
            jdbc_password => "ssgtv0930"

            # when to periodically run statement, cron format (ex: every 30 minutes)
            schedule => "* * * * *"
            # use_column_value => true
            # tracking_column => "call_num"
            # query parameters
            # parameters => { "department" => "IT" }

            # sql 
	    statement => "SELECT replace(a.call_id, '_' , '-' ) as call_id, 
					 a.direction, 
			        CASE a.direction WHEN 'O' THEN '0000000004'
				 ELSE '' END AS analysisCate,
				CASE a.direction WHEN 'O' THEN '고객아웃바운드'
				 ELSE '' END AS analysisCateNm,
				CASE WHEN b.det_nm IS NULL THEN '기타(999)' 
			 	     WHEN length(a.caller_num) < 9 THEN '기타(999)'
             			     ELSE b.det_nm END as det_nm,
				CASE WHEN b.attr_val01 IS NULL THEN '기타'
				     WHEN length(a.caller_num) < 9 THEN '기타'
			 	     ELSE b.attr_val01 END as attr_val01,
            			REGEXP_REPLACE(a.caller_num, '(^02.{0}|^01.{1}|[0-9]{3})([0-9]+)([0-9]{4})', '\\1-****-\\3') as caller_num,
				CASE WHEN ifnull(a.caller_num, '999') like '02%' then left(a.caller_num , 2) else left(a.caller_num , 3) end as local_ext,
         			ifnull(dept_getNm((select dept_id from nx_emp n where n.emp_id = a.emp_id)),'') as dept_nm, /* 조회 파라미터 */
		 		ifnull(dept_getNm((select pre_dept_id from nx_dept n where n.dept_id = a.dept_id)),'') as pre_dept_nm /* 조회 결과는 this + dept_nm */
 			    FROM ua_call a LEFT OUTER JOIN nx_comm_cd_dtl b
				ON case when ifnull(a.caller_num,'999') like '02%' then left(a.caller_num , 2) else left(a.caller_num , 3) end = b.det_cd
     				AND b.mst_cd = 'PHONE_AREA'
 			    WHERE a.mod_dtm >= date_add( :sql_last_value, interval -2 minute ) OR a.reg_dtm >= date_add( :sql_last_value, interval -2 minute)" 
        }
}

filter {
  ruby {
    code => "event.set('year_month', event.get('call_id')[0..5])"	
  }
  
  if [direction] == "I" {
    mutate { remove_field => ["analysiscate","analysiscatenm"]}   
  }
  mutate {
   rename => { "analysiscate" => "analysisCate" }	
   rename => { "analysiscatenm" => "analysisCateNm"}
  }
}

output {
    elasticsearch {
      index => "call_%{year_month}"
      hosts => ["localhost:9200"]
      action => "update"
      doc_as_upsert => true 
      document_id => "%{call_id}" 
    }
  # stdout{
 # 	codec => "json"
 # }
}
